@inherits RazorFunction
@using Composite.Core.WebClient.Renderings.Page
@using Composite.Media.YouTubeChannel

@functions {
	public override string FunctionDescription
	{
		get { return "A Youtube Channel Viewer"; }
	}

	[FunctionParameter(Label = "YouTube Channel", Help = "The user name or URL of the YouTube channel")]
	public string YouTubeChannel { get; set; }

	[FunctionParameter(Label = "API Key", Help = "API Key")]
	public string APIKey { get; set; }

	[FunctionParameter(Label = "Page Size", Help = "The count of videos per page.", DefaultValue = 10)]
	public int PageSize { get; set; }
}
@{

	YouTubeChannel = YoutubeChannelFacade.ParseYouTubeChannelReference(YouTubeChannel);

	var pageToken = Request["pagetoken"] ?? string.Empty;

	var playlist = YoutubeChannelFacade.GetYouTubeChannel(YouTubeChannel, PageSize, pageToken, APIKey);

	if (playlist == null)
	{
		<div class="alert alert-warning">@Resources.YouTubeChannel.NoItemsMessage</div>
		return;
	}

}

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://www.composite.net/ns/function/1.0">
<head>
	@if (PageRenderer.RenderingReason == RenderingReason.ScreenshotGeneration)
	{
		<style type="text/css">
			.screenshot {
				position: relative;
			}

				.screenshot div {
					position: absolute;
					left: 50%;
					top: 50%;
					width: 68px;
					height: 48px;
					margin-left: -34px;
					margin-top: -24px;
				}
		</style>
	}
</head>
<body>

	<div class="youtube-channel row">
		<div class="col-xs-12 col-sm-12 col-md-7">
			@if (PageRenderer.RenderingReason == RenderingReason.ScreenshotGeneration)
			{
				<div class="screenshot pull-left">
					<div>
						<svg height="100%" version="1.1" viewBox="0 0 68 48" width="100%"><path class="ytp-large-play-button-bg" d="m .66,37.62 c 0,0 .66,4.70 2.70,6.77 2.58,2.71 5.98,2.63 7.49,2.91 5.43,.52 23.10,.68 23.12,.68 .00,-1.3e-5 14.29,-0.02 23.81,-0.71 1.32,-0.15 4.22,-0.17 6.81,-2.89 2.03,-2.07 2.70,-6.77 2.70,-6.77 0,0 .67,-5.52 .67,-11.04 l 0,-5.17 c 0,-5.52 -0.67,-11.04 -0.67,-11.04 0,0 -0.66,-4.70 -2.70,-6.77 C 62.03,.86 59.13,.84 57.80,.69 48.28,0 34.00,0 34.00,0 33.97,0 19.69,0 10.18,.69 8.85,.84 5.95,.86 3.36,3.58 1.32,5.65 .66,10.35 .66,10.35 c 0,0 -0.55,4.50 -0.66,9.45 l 0,8.36 c .10,4.94 .66,9.45 .66,9.45 z" fill="#1f1f1e" fill-opacity="0.81"></path><path d="m 26.96,13.67 18.37,9.62 -18.37,9.55 -0.00,-19.17 z" fill="#fff"></path><path d="M 45.02,23.46 45.32,23.28 26.96,13.67 43.32,24.34 45.02,23.46 z" fill="#ccc"></path></svg>
					</div>
					<img class="img-responsive" src="http://img.youtube.com/vi/@(playlist.items[0].snippet.resourceId.videoId)/0.jpg" alt="img" />
				</div>
			}
			else
			{
				<div id="ytplayer"></div>
			}
			<h3 id="js-player-title">
				@playlist.items[0].snippet.title
			</h3>
		</div>
		<div class="col-xs-12 col-sm-12 col-md-5">
			<div class="list-group">
				@foreach (var video in playlist.items)
				{
					<a href="#@video.snippet.resourceId.videoId" title="" class="list-group-item clearfix" data-title="@video.snippet.title" data-id="@video.snippet.resourceId.videoId">
						<img class="img-responsive pull-left" src="@video.snippet.thumbnails["default"].url" alt="img" />
						<h5 class="list-group-item-heading">@video.snippet.title</h5>
					</a>
				}
			</div>

			@if (playlist.pageinfo.totalResults > PageSize)
            {
				<ul class="pagination">
					@if (!string.IsNullOrEmpty(playlist.prevPageToken))
					{
						<li><a href="?pagetoken=@playlist.prevPageToken" title="Previous">«</a></li>
					}
					else
					{
						<li class="disabled"><a>«</a></li>
					}
					<li>
						<a>
							about <strong>@playlist.pageinfo.totalResults</strong>
						</a>
					</li>
					@if (!string.IsNullOrEmpty(playlist.nextPageToken))
					{
						<li><a href="?pagetoken=@playlist.nextPageToken" title="Next">»</a></li>
					}
					else
					{
						<li class="disabled"><a>»</a></li>
					}
				</ul>
            }
		</div>
	</div>
	<script id="youtube-player-id" type="text/javascript">

		var tag = document.createElement('script');
		tag.src = "https://www.youtube.com/player_api";
		var firstScriptTag = document.getElementsByTagName('script')[0];
		firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);


		var YouTubeChannelPlayer;
		function onYouTubePlayerAPIReady() {
			var id = window.location.hash.substr(1);
			YouTubeChannelPlayer = new YT.Player('ytplayer', {
				height: '390',
				width: '100%',
				videoId: id || '@playlist.items[0].snippet.resourceId.videoId'
			});

			if (id) {
				var $item = $('[data-id=' + id + ']');
				$('#js-player-title').text($item.data("title"));
			}
		}

		$(window).on('hashchange', function () {
			var id = window.location.hash.substr(1);
			YouTubeChannelPlayer.loadVideoById({ 'videoId': id, 'suggestedQuality': 'large' });
			var $item = $('[data-id=' + id + ']');
			$('#js-player-title').text($item.data("title"));
			$('html, body').animate({ scrollTop: "0" });
		});
	</script>

</body>

</html>